{
	"version": 3,
	"names": [
		"defaults",
		"base",
		"preventDefault",
		"deltaSource",
		"perAction",
		"enabled",
		"origin",
		"x",
		"y",
		"actions"
	],
	"sources": [
		"options.ts"
	],
	"sourcesContent": [
		"import type { Point, Listeners, OrBoolean, Element } from '@interactjs/core/types'\n\nexport interface Defaults {\n  base: BaseDefaults\n  perAction: PerActionDefaults\n  actions: ActionDefaults\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ActionDefaults {}\n\nexport interface BaseDefaults {\n  preventDefault?: 'auto' | 'never' | string\n  deltaSource?: 'page' | 'client'\n  context?: Node\n}\n\nexport interface PerActionDefaults {\n  enabled?: boolean\n  origin?: Point | string | Element\n  listeners?: Listeners\n  allowFrom?: string | Element\n  ignoreFrom?: string | Element\n}\n\nexport type Options = Partial<BaseDefaults> &\nPartial<PerActionDefaults> & {\n  [P in keyof ActionDefaults]?: Partial<ActionDefaults[P]>\n}\n\nexport interface OptionsArg extends BaseDefaults, OrBoolean<Partial<ActionDefaults>> {}\n\nexport const defaults: Defaults = {\n  base: {\n    preventDefault: 'auto',\n    deltaSource: 'page',\n  },\n\n  perAction: {\n    enabled: false,\n    origin: { x: 0, y: 0 },\n  },\n\n  actions: {} as ActionDefaults,\n}\n"
	],
	"mappings": "AAQA;AAwBA,OAAO,MAAMA,QAAkB,GAAG;EAChCC,IAAI,EAAE;IACJC,cAAc,EAAE,MADZ;IAEJC,WAAW,EAAE;EAFT,CAD0B;EAMhCC,SAAS,EAAE;IACTC,OAAO,EAAE,KADA;IAETC,MAAM,EAAE;MAAEC,CAAC,EAAE,CAAL;MAAQC,CAAC,EAAE;IAAX;EAFC,CANqB;EAWhCC,OAAO,EAAE;AAXuB,CAA3B"
}