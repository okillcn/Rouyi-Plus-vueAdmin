{
	"version": 3,
	"names": [
		"arr",
		"domUtils",
		"extend",
		"is",
		"pExtend",
		"pointerUtils",
		"FakeEvent",
		"currentTarget",
		"originalEvent",
		"type",
		"constructor",
		"this",
		"preventOriginalDefault",
		"preventDefault",
		"stopPropagation",
		"stopImmediatePropagation",
		"getOptions",
		"param",
		"object",
		"capture",
		"passive",
		"options",
		"id",
		"install",
		"scope",
		"_scope$document",
		"targets",
		"delegatedEvents",
		"documents",
		"eventsMethods",
		"add",
		"remove",
		"addDelegate",
		"selector",
		"context",
		"listener",
		"optionalArg",
		"doc",
		"delegateListener",
		"delegateUseCapture",
		"delegates",
		"delegate",
		"find",
		"d",
		"listeners",
		"push",
		"removeDelegate",
		"index",
		"matchFound",
		"length",
		"cur",
		"i",
		"fn",
		"splice",
		"supportsOptions",
		"supportsPassive",
		"eventTarget",
		"target",
		"t",
		"events",
		"addEventListener",
		"contains",
		"targetIndex",
		"findIndex",
		"hasOwnProperty",
		"typeIsEmpty",
		"typeListeners",
		"removeEventListener",
		"Object",
		"keys",
		"event",
		"fakeEvent",
		"getEventTargets",
		"element",
		"matchesSelector",
		"nodeContains",
		"parentNode",
		"document",
		"createElement"
	],
	"sources": [
		"events.ts"
	],
	"sourcesContent": [
		"import type { Scope } from '@interactjs/core/scope'\nimport type { Element } from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport pExtend from '@interactjs/utils/pointerExtend'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    events: ReturnType<typeof install>\n  }\n}\n\ntype Listener = (event: Event | FakeEvent) => any\n\nfunction install (scope: Scope) {\n  const targets: Array<{\n    eventTarget: EventTarget\n    events: { [type: string]: Listener[] }\n  }> = []\n\n  const delegatedEvents: {\n    [type: string]: Array<{\n      selector: string\n      context: Node\n      listeners: Array<[Listener, { capture: boolean, passive: boolean }]>\n    }>\n  } = {}\n  const documents: Document[] = []\n\n  const eventsMethods = {\n    add,\n    remove,\n\n    addDelegate,\n    removeDelegate,\n\n    delegateListener,\n    delegateUseCapture,\n    delegatedEvents,\n    documents,\n\n    targets,\n\n    supportsOptions: false,\n    supportsPassive: false,\n  }\n\n  // check if browser supports passive events and options arg\n  scope.document?.createElement('div').addEventListener('test', null, {\n    get capture () {\n      return (eventsMethods.supportsOptions = true)\n    },\n    get passive () {\n      return (eventsMethods.supportsPassive = true)\n    },\n  })\n\n  scope.events = eventsMethods\n\n  function add (eventTarget: EventTarget, type: string, listener: Listener, optionalArg?: boolean | any) {\n    const options = getOptions(optionalArg)\n    let target = arr.find(targets, (t) => t.eventTarget === eventTarget)\n\n    if (!target) {\n      target = {\n        eventTarget,\n        events: {},\n      }\n\n      targets.push(target)\n    }\n\n    if (!target.events[type]) {\n      target.events[type] = []\n    }\n\n    if (eventTarget.addEventListener && !arr.contains(target.events[type], listener)) {\n      eventTarget.addEventListener(\n        type,\n        listener as any,\n        eventsMethods.supportsOptions ? options : options.capture,\n      )\n      target.events[type].push(listener)\n    }\n  }\n\n  function remove (\n    eventTarget: EventTarget,\n    type: string,\n    listener?: 'all' | Listener,\n    optionalArg?: boolean | any,\n  ) {\n    const options = getOptions(optionalArg)\n    const targetIndex = arr.findIndex(targets, (t) => t.eventTarget === eventTarget)\n    const target = targets[targetIndex]\n\n    if (!target || !target.events) {\n      return\n    }\n\n    if (type === 'all') {\n      for (type in target.events) {\n        if (target.events.hasOwnProperty(type)) {\n          remove(eventTarget, type, 'all')\n        }\n      }\n      return\n    }\n\n    let typeIsEmpty = false\n    const typeListeners = target.events[type]\n\n    if (typeListeners) {\n      if (listener === 'all') {\n        for (let i = typeListeners.length - 1; i >= 0; i--) {\n          remove(eventTarget, type, typeListeners[i], options)\n        }\n        return\n      } else {\n        for (let i = 0; i < typeListeners.length; i++) {\n          if (typeListeners[i] === listener) {\n            eventTarget.removeEventListener(\n              type,\n              listener as any,\n              eventsMethods.supportsOptions ? options : options.capture,\n            )\n            typeListeners.splice(i, 1)\n\n            if (typeListeners.length === 0) {\n              delete target.events[type]\n              typeIsEmpty = true\n            }\n\n            break\n          }\n        }\n      }\n    }\n\n    if (typeIsEmpty && !Object.keys(target.events).length) {\n      targets.splice(targetIndex, 1)\n    }\n  }\n\n  function addDelegate (selector: string, context: Node, type: string, listener: Listener, optionalArg?: any) {\n    const options = getOptions(optionalArg)\n    if (!delegatedEvents[type]) {\n      delegatedEvents[type] = []\n\n      // add delegate listener functions\n      for (const doc of documents) {\n        add(doc, type, delegateListener)\n        add(doc, type, delegateUseCapture, true)\n      }\n    }\n\n    const delegates = delegatedEvents[type]\n    let delegate = arr.find(delegates, (d) => d.selector === selector && d.context === context)\n\n    if (!delegate) {\n      delegate = { selector, context, listeners: [] }\n      delegates.push(delegate)\n    }\n\n    delegate.listeners.push([listener, options])\n  }\n\n  function removeDelegate (\n    selector: string,\n    context: Document | Element,\n    type: string,\n    listener?: Listener,\n    optionalArg?: any,\n  ) {\n    const options = getOptions(optionalArg)\n    const delegates = delegatedEvents[type]\n    let matchFound = false\n    let index: number\n\n    if (!delegates) return\n\n    // count from last index of delegated to 0\n    for (index = delegates.length - 1; index >= 0; index--) {\n      const cur = delegates[index]\n      // look for matching selector and context Node\n      if (cur.selector === selector && cur.context === context) {\n        const { listeners } = cur\n\n        // each item of the listeners array is an array: [function, capture, passive]\n        for (let i = listeners.length - 1; i >= 0; i--) {\n          const [fn, { capture, passive }] = listeners[i]\n\n          // check if the listener functions and capture and passive flags match\n          if (fn === listener && capture === options.capture && passive === options.passive) {\n            // remove the listener from the array of listeners\n            listeners.splice(i, 1)\n\n            // if all listeners for this target have been removed\n            // remove the target from the delegates array\n            if (!listeners.length) {\n              delegates.splice(index, 1)\n\n              // remove delegate function from context\n              remove(context, type, delegateListener)\n              remove(context, type, delegateUseCapture, true)\n            }\n\n            // only remove one listener\n            matchFound = true\n            break\n          }\n        }\n\n        if (matchFound) {\n          break\n        }\n      }\n    }\n  }\n\n  // bound to the interactable context when a DOM event\n  // listener is added to a selector interactable\n  function delegateListener (event: Event | FakeEvent, optionalArg?: any) {\n    const options = getOptions(optionalArg)\n    const fakeEvent = new FakeEvent(event as Event)\n    const delegates = delegatedEvents[event.type]\n    const [eventTarget] = pointerUtils.getEventTargets(event as Event)\n    let element: Node = eventTarget\n\n    // climb up document tree looking for selector matches\n    while (is.element(element)) {\n      for (let i = 0; i < delegates.length; i++) {\n        const cur = delegates[i]\n        const { selector, context } = cur\n\n        if (\n          domUtils.matchesSelector(element, selector) &&\n          domUtils.nodeContains(context, eventTarget) &&\n          domUtils.nodeContains(context, element)\n        ) {\n          const { listeners } = cur\n\n          fakeEvent.currentTarget = element\n\n          for (const [fn, { capture, passive }] of listeners) {\n            if (capture === options.capture && passive === options.passive) {\n              fn(fakeEvent)\n            }\n          }\n        }\n      }\n\n      element = domUtils.parentNode(element)\n    }\n  }\n\n  function delegateUseCapture (this: Element, event: Event | FakeEvent) {\n    return delegateListener.call(this, event, true)\n  }\n\n  // for type inferrence\n  return eventsMethods\n}\n\nclass FakeEvent implements Partial<Event> {\n  currentTarget: Node\n  originalEvent: Event\n  type: string\n\n  constructor (originalEvent: Event) {\n    this.originalEvent = originalEvent\n    // duplicate the event so that currentTarget can be changed\n    pExtend(this, originalEvent)\n  }\n\n  preventOriginalDefault () {\n    this.originalEvent.preventDefault()\n  }\n\n  stopPropagation () {\n    this.originalEvent.stopPropagation()\n  }\n\n  stopImmediatePropagation () {\n    this.originalEvent.stopImmediatePropagation()\n  }\n}\n\nfunction getOptions (param: { [index: string]: any } | boolean): { capture: boolean, passive: boolean } {\n  if (!is.object(param)) {\n    return { capture: !!param, passive: false }\n  }\n\n  const options = extend({}, param) as any\n\n  options.capture = !!param.capture\n  options.passive = !!param.passive\n\n  return options\n}\n\nexport default {\n  id: 'events',\n  install,\n}\n"
	],
	"mappings": "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"
}