{
	"version": 3,
	"names": [
		"arr",
		"domUtils",
		"extend",
		"is",
		"InteractableSet",
		"list",
		"selectorMap",
		"scope",
		"constructor",
		"addListeners",
		"interactable",
		"target",
		"_context",
		"context",
		"targetMappings",
		"string",
		"id",
		"targetIndex",
		"findIndex",
		"m",
		"splice",
		"new",
		"options",
		"actions",
		"Interactable",
		"document",
		"events",
		"mappingInfo",
		"addDocument",
		"_doc",
		"push",
		"Object",
		"defineProperty",
		"value",
		"configurable",
		"fire",
		"win",
		"_win",
		"get",
		"isSelector",
		"found",
		"find",
		"inContext",
		"forEachMatch",
		"node",
		"callback",
		"ret",
		"element",
		"matchesSelector",
		"undefined"
	],
	"sources": [
		"InteractableSet.ts"
	],
	"sourcesContent": [
		"import type { Interactable } from '@interactjs/core/Interactable'\nimport type { OptionsArg, Options } from '@interactjs/core/options'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { Target, Context } from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactable:new': {\n      interactable: Interactable\n      target: Target\n      options: OptionsArg\n      win: Window\n    }\n  }\n}\n\ninterface InteractableScopeProp {\n  context: Context\n  interactable: Interactable\n}\n\nexport class InteractableSet {\n  // all set interactables\n  list: Interactable[] = []\n\n  selectorMap: {\n    [selector: string]: InteractableScopeProp[]\n  } = {}\n\n  scope: Scope\n\n  constructor (scope: Scope) {\n    this.scope = scope\n    scope.addListeners({\n      'interactable:unset': ({ interactable }) => {\n        const { target, _context: context } = interactable\n        const targetMappings: InteractableScopeProp[] = is.string(target)\n          ? this.selectorMap[target]\n          : (target as any)[this.scope.id]\n\n        const targetIndex = arr.findIndex(targetMappings, (m) => m.context === context)\n        if (targetMappings[targetIndex]) {\n          // Destroying mappingInfo's context and interactable\n          targetMappings[targetIndex].context = null\n          targetMappings[targetIndex].interactable = null\n        }\n        targetMappings.splice(targetIndex, 1)\n      },\n    })\n  }\n\n  new (target: Target, options?: any): Interactable {\n    options = extend(options || {}, {\n      actions: this.scope.actions,\n    })\n    const interactable = new this.scope.Interactable(target, options, this.scope.document, this.scope.events)\n    const mappingInfo = { context: interactable._context, interactable }\n\n    this.scope.addDocument(interactable._doc)\n    this.list.push(interactable)\n\n    if (is.string(target)) {\n      if (!this.selectorMap[target]) {\n        this.selectorMap[target] = []\n      }\n      this.selectorMap[target].push(mappingInfo)\n    } else {\n      if (!(interactable.target as any)[this.scope.id]) {\n        Object.defineProperty(target, this.scope.id, {\n          value: [],\n          configurable: true,\n        })\n      }\n\n      ;(target as any)[this.scope.id].push(mappingInfo)\n    }\n\n    this.scope.fire('interactable:new', {\n      target,\n      options,\n      interactable,\n      win: this.scope._win,\n    })\n\n    return interactable\n  }\n\n  get (target: Target, options?: Options) {\n    const context = (options && options.context) || this.scope.document\n    const isSelector = is.string(target)\n    const targetMappings: InteractableScopeProp[] = isSelector\n      ? this.selectorMap[target as string]\n      : (target as any)[this.scope.id]\n\n    if (!targetMappings) {\n      return null\n    }\n\n    const found = arr.find(\n      targetMappings,\n      (m) => m.context === context && (isSelector || m.interactable.inContext(target as any)),\n    )\n\n    return found && found.interactable\n  }\n\n  forEachMatch<T> (node: Node, callback: (interactable: Interactable) => T) {\n    for (const interactable of this.list) {\n      let ret: void | T\n\n      if (\n        (is.string(interactable.target)\n          ? // target is a selector and the element matches\n          is.element(node) && domUtils.matchesSelector(node, interactable.target)\n          : // target is the element\n          node === interactable.target) &&\n        // the element is in context\n        interactable.inContext(node)\n      ) {\n        ret = callback(interactable)\n      }\n\n      if (ret !== undefined) {\n        return ret\n      }\n    }\n  }\n}\n"
	],
	"mappings": "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"
}