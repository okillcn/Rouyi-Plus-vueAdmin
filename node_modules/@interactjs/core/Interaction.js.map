{
	"version": 3,
	"names": [
		"arr",
		"extend",
		"hypot",
		"warnOnce",
		"copyAction",
		"pointerUtils",
		"rectUtils",
		"InteractEvent",
		"PointerInfo",
		"_ProxyValues",
		"_ProxyMethods",
		"idCounter",
		"Interaction",
		"interactable",
		"element",
		"rect",
		"_rects",
		"edges",
		"_scopeFire",
		"prepared",
		"name",
		"axis",
		"pointerType",
		"pointers",
		"downEvent",
		"downPointer",
		"_latestPointer",
		"pointer",
		"event",
		"eventTarget",
		"prevEvent",
		"pointerIsDown",
		"pointerWasMoved",
		"_interacting",
		"_ending",
		"_stopped",
		"_proxy",
		"simulation",
		"pointerMoveTolerance",
		"doMove",
		"signalArg",
		"move",
		"coords",
		"start",
		"newCoords",
		"prev",
		"cur",
		"delta",
		"velocity",
		"_id",
		"constructor",
		"scopeFire",
		"that",
		"key",
		"Object",
		"defineProperty",
		"get",
		"value",
		"args",
		"interaction",
		"pointerDown",
		"pointerIndex",
		"updatePointer",
		"pointerInfo",
		"type",
		"action",
		"interacting",
		"length",
		"options",
		"enabled",
		"getRect",
		"left",
		"right",
		"top",
		"bottom",
		"_doPhase",
		"phase",
		"pointerMove",
		"modification",
		"endResult",
		"duplicateMove",
		"page",
		"x",
		"y",
		"client",
		"dx",
		"dy",
		"getPointerIndex",
		"duplicate",
		"setCoordVelocity",
		"copyCoords",
		"setZeroCoords",
		"pointerUp",
		"curEventTarget",
		"test",
		"end",
		"removePointer",
		"documentBlur",
		"endPhaseResult",
		"stop",
		"currentAction",
		"pointerId",
		"getPointerId",
		"findIndex",
		"curPointer",
		"id",
		"getPointerInfo",
		"down",
		"push",
		"setCoords",
		"map",
		"p",
		"_now",
		"setCoordDeltas",
		"downTime",
		"timeStamp",
		"downTarget",
		"pointerExtend",
		"_updateLatestPointer",
		"splice",
		"destroy",
		"_createPreparedEvent",
		"preEnd",
		"_fireEvent",
		"iEvent",
		"fire",
		"addEdges",
		"deltaSource",
		"width",
		"height",
		"beforeResult",
		"Date",
		"now"
	],
	"sources": [
		"Interaction.ts"
	],
	"sourcesContent": [
		"import type {\n  Element,\n  EdgeOptions,\n  PointerEventType,\n  PointerType,\n  FullRect,\n  CoordsSet,\n} from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\nimport extend from '@interactjs/utils/extend'\nimport hypot from '@interactjs/utils/hypot'\nimport { warnOnce, copyAction } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type { EventPhase } from './InteractEvent'\nimport { InteractEvent } from './InteractEvent'\nimport type { Interactable } from './Interactable'\nimport { PointerInfo } from './PointerInfo'\nimport type { ActionDefaults } from './options'\nimport type { Scope } from './scope'\nimport type { ActionName, ActionProps } from './types'\n\nexport enum _ProxyValues {\n  interactable = '',\n  element = '',\n  prepared = '',\n  pointerIsDown = '',\n  pointerWasMoved = '',\n  _proxy = '',\n}\n\nexport enum _ProxyMethods {\n  start = '',\n  move = '',\n  end = '',\n  stop = '',\n  interacting = '',\n}\n\nexport type PointerArgProps<T extends {} = {}> = {\n  pointer: PointerType\n  event: PointerEventType\n  eventTarget: Node\n  pointerIndex: number\n  pointerInfo: PointerInfo\n  interaction: Interaction<never>\n} & T\n\nexport interface DoPhaseArg<T extends ActionName, P extends EventPhase> {\n  event: PointerEventType\n  phase: EventPhase\n  interaction: Interaction<T>\n  iEvent: InteractEvent<T, P>\n  preEnd?: boolean\n  type?: string\n}\n\nexport type DoAnyPhaseArg = DoPhaseArg<ActionName, EventPhase>\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:new': { interaction: Interaction<ActionName> }\n    'interactions:down': PointerArgProps<{\n      type: 'down'\n    }>\n    'interactions:move': PointerArgProps<{\n      type: 'move'\n      dx: number\n      dy: number\n      duplicate: boolean\n    }>\n    'interactions:up': PointerArgProps<{\n      type: 'up'\n      curEventTarget: EventTarget\n    }>\n    'interactions:cancel': SignalArgs['interactions:up'] & {\n      type: 'cancel'\n      curEventTarget: EventTarget\n    }\n    'interactions:update-pointer': PointerArgProps<{\n      down: boolean\n    }>\n    'interactions:remove-pointer': PointerArgProps\n    'interactions:blur': { interaction: Interaction<never>, event: Event, type: 'blur' }\n    'interactions:before-action-start': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-start': DoAnyPhaseArg\n    'interactions:after-action-start': DoAnyPhaseArg\n    'interactions:before-action-move': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-move': DoAnyPhaseArg\n    'interactions:after-action-move': DoAnyPhaseArg\n    'interactions:before-action-end': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-end': DoAnyPhaseArg\n    'interactions:after-action-end': DoAnyPhaseArg\n    'interactions:stop': { interaction: Interaction }\n  }\n}\n\nexport type InteractionProxy<T extends ActionName | null = never> = Pick<\nInteraction<T>,\nkeyof typeof _ProxyValues | keyof typeof _ProxyMethods\n>\n\nlet idCounter = 0\n\nexport class Interaction<T extends ActionName | null = ActionName> {\n  // current interactable being interacted with\n  interactable: Interactable | null = null\n\n  // the target element of the interactable\n  element: Element | null = null\n  rect: FullRect | null = null\n  _rects?: {\n    start: FullRect\n    corrected: FullRect\n    previous: FullRect\n    delta: FullRect\n  }\n  edges: EdgeOptions | null = null\n\n  _scopeFire: Scope['fire']\n\n  // action that's ready to be fired on next move event\n  prepared: ActionProps<T> = {\n    name: null,\n    axis: null,\n    edges: null,\n  }\n\n  pointerType: string\n\n  // keep track of added pointers\n  pointers: PointerInfo[] = []\n\n  // pointerdown/mousedown/touchstart event\n  downEvent: PointerEventType | null = null\n\n  downPointer: PointerType = {} as PointerType\n\n  _latestPointer: {\n    pointer: PointerType\n    event: PointerEventType\n    eventTarget: Node\n  } = {\n      pointer: null,\n      event: null,\n      eventTarget: null,\n    }\n\n  // previous action event\n  prevEvent: InteractEvent<T, EventPhase> = null\n\n  pointerIsDown = false\n  pointerWasMoved = false\n  _interacting = false\n  _ending = false\n  _stopped = true\n  _proxy: InteractionProxy<T> | null = null\n\n  simulation = null\n\n  /** @internal */ get pointerMoveTolerance () {\n    return 1\n  }\n\n  /**\n   * @alias Interaction.prototype.move\n   */\n  doMove = warnOnce(function (this: Interaction, signalArg: any) {\n    this.move(signalArg)\n  }, 'The interaction.doMove() method has been renamed to interaction.move()')\n\n  coords: CoordsSet = {\n    // Starting InteractEvent pointer coordinates\n    start: pointerUtils.newCoords(),\n    // Previous native pointer move event coordinates\n    prev: pointerUtils.newCoords(),\n    // current native pointer move event coordinates\n    cur: pointerUtils.newCoords(),\n    // Change in coordinates and time of the pointer\n    delta: pointerUtils.newCoords(),\n    // pointer velocity\n    velocity: pointerUtils.newCoords(),\n  }\n\n  readonly _id: number = idCounter++\n\n  /** */\n  constructor ({ pointerType, scopeFire }: { pointerType?: string, scopeFire: Scope['fire'] }) {\n    this._scopeFire = scopeFire\n    this.pointerType = pointerType\n\n    const that = this\n\n    this._proxy = {} as InteractionProxy<T>\n\n    for (const key in _ProxyValues) {\n      Object.defineProperty(this._proxy, key, {\n        get () {\n          return that[key]\n        },\n      })\n    }\n\n    for (const key in _ProxyMethods) {\n      Object.defineProperty(this._proxy, key, {\n        value: (...args: any[]) => that[key](...args),\n      })\n    }\n\n    this._scopeFire('interactions:new', { interaction: this })\n  }\n\n  pointerDown (pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    const pointerIndex = this.updatePointer(pointer, event, eventTarget, true)\n    const pointerInfo = this.pointers[pointerIndex]\n\n    this._scopeFire('interactions:down', {\n      pointer,\n      event,\n      eventTarget,\n      pointerIndex,\n      pointerInfo,\n      type: 'down',\n      interaction: this as unknown as Interaction<never>,\n    })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable({\n   *     // disable the default drag start by down->move\n   *     manualStart: true\n   *   })\n   *   // start dragging after the user holds the pointer down\n   *   .on('hold', function (event) {\n   *     var interaction = event.interaction\n   *\n   *     if (!interaction.interacting()) {\n   *       interaction.start({ name: 'drag' },\n   *                         event.interactable,\n   *                         event.currentTarget)\n   *     }\n   * })\n   * ```\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate\n   * number of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   * @param {object} action   The action to be performed - drag, resize, etc.\n   * @param {Interactable} target  The Interactable to target\n   * @param {Element} element The DOM Element to target\n   * @return {Boolean} Whether the interaction was successfully started\n   */\n  start<A extends ActionName> (action: ActionProps<A>, interactable: Interactable, element: Element): boolean {\n    if (\n      this.interacting() ||\n      !this.pointerIsDown ||\n      this.pointers.length < (action.name === 'gesture' ? 2 : 1) ||\n      !interactable.options[action.name as keyof ActionDefaults].enabled\n    ) {\n      return false\n    }\n\n    copyAction(this.prepared, action)\n\n    this.interactable = interactable\n    this.element = element\n    this.rect = interactable.getRect(element)\n    this.edges = this.prepared.edges\n      ? extend({}, this.prepared.edges)\n      : { left: true, right: true, top: true, bottom: true }\n    this._stopped = false\n    this._interacting =\n      this._doPhase({\n        interaction: this,\n        event: this.downEvent,\n        phase: 'start',\n      }) && !this._stopped\n\n    return this._interacting\n  }\n\n  pointerMove (pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    if (!this.simulation && !(this.modification && this.modification.endResult)) {\n      this.updatePointer(pointer, event, eventTarget, false)\n    }\n\n    const duplicateMove =\n      this.coords.cur.page.x === this.coords.prev.page.x &&\n      this.coords.cur.page.y === this.coords.prev.page.y &&\n      this.coords.cur.client.x === this.coords.prev.client.x &&\n      this.coords.cur.client.y === this.coords.prev.client.y\n\n    let dx: number\n    let dy: number\n\n    // register movement greater than pointerMoveTolerance\n    if (this.pointerIsDown && !this.pointerWasMoved) {\n      dx = this.coords.cur.client.x - this.coords.start.client.x\n      dy = this.coords.cur.client.y - this.coords.start.client.y\n\n      this.pointerWasMoved = hypot(dx, dy) > this.pointerMoveTolerance\n    }\n\n    const pointerIndex = this.getPointerIndex(pointer)\n    const signalArg = {\n      pointer,\n      pointerIndex,\n      pointerInfo: this.pointers[pointerIndex],\n      event,\n      type: 'move' as const,\n      eventTarget,\n      dx,\n      dy,\n      duplicate: duplicateMove,\n      interaction: this as unknown as Interaction<never>,\n    }\n\n    if (!duplicateMove) {\n      // set pointer coordinate, time changes and velocity\n      pointerUtils.setCoordVelocity(this.coords.velocity, this.coords.delta)\n    }\n\n    this._scopeFire('interactions:move', signalArg)\n\n    if (!duplicateMove && !this.simulation) {\n      // if interacting, fire an 'action-move' signal etc\n      if (this.interacting()) {\n        signalArg.type = null\n        this.move(signalArg)\n      }\n\n      if (this.pointerWasMoved) {\n        pointerUtils.copyCoords(this.coords.prev, this.coords.cur)\n      }\n    }\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('dragmove', function (event) {\n   *     if (someCondition) {\n   *       // change the snap settings\n   *       event.interactable.draggable({ snap: { targets: [] }})\n   *       // fire another move event with re-calculated snap\n   *       event.interaction.move()\n   *     }\n   *   })\n   * ```\n   *\n   * Force a move of the current action at the same coordinates. Useful if\n   * snap/restrict has been changed and you want a movement with the new\n   * settings.\n   */\n  move (signalArg?: any) {\n    if (!signalArg || !signalArg.event) {\n      pointerUtils.setZeroCoords(this.coords.delta)\n    }\n\n    signalArg = extend(\n      {\n        pointer: this._latestPointer.pointer,\n        event: this._latestPointer.event,\n        eventTarget: this._latestPointer.eventTarget,\n        interaction: this,\n      },\n      signalArg || {},\n    )\n\n    signalArg.phase = 'move'\n\n    this._doPhase(signalArg)\n  }\n\n  // End interact move events and stop auto-scroll unless simulation is running\n  pointerUp (pointer: PointerType, event: PointerEventType, eventTarget: Node, curEventTarget: EventTarget) {\n    let pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) {\n      pointerIndex = this.updatePointer(pointer, event, eventTarget, false)\n    }\n\n    const type = /cancel$/i.test(event.type) ? 'cancel' : 'up'\n\n    this._scopeFire(`interactions:${type}` as 'interactions:up' | 'interactions:cancel', {\n      pointer,\n      pointerIndex,\n      pointerInfo: this.pointers[pointerIndex],\n      event,\n      eventTarget,\n      type: type as any,\n      curEventTarget,\n      interaction: this as unknown as Interaction<never>,\n    })\n\n    if (!this.simulation) {\n      this.end(event)\n    }\n\n    this.removePointer(pointer, event)\n  }\n\n  documentBlur (event: Event) {\n    this.end(event as any)\n    this._scopeFire('interactions:blur', {\n      event,\n      type: 'blur',\n      interaction: this as unknown as Interaction<never>,\n    })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('move', function (event) {\n   *     if (event.pageX > 1000) {\n   *       // end the current action\n   *       event.interaction.end()\n   *       // stop all further listeners from being called\n   *       event.stopImmediatePropagation()\n   *     }\n   *   })\n   * ```\n   *\n   * @param {PointerEvent} [event]\n   */\n  end (event?: PointerEventType) {\n    this._ending = true\n    event = event || this._latestPointer.event\n    let endPhaseResult: boolean\n\n    if (this.interacting()) {\n      endPhaseResult = this._doPhase({\n        event,\n        interaction: this,\n        phase: 'end',\n      })\n    }\n\n    this._ending = false\n\n    if (endPhaseResult === true) {\n      this.stop()\n    }\n  }\n\n  currentAction () {\n    return this._interacting ? this.prepared.name : null\n  }\n\n  interacting () {\n    return this._interacting\n  }\n\n  /** */\n  stop () {\n    this._scopeFire('interactions:stop', { interaction: this })\n\n    this.interactable = this.element = null\n\n    this._interacting = false\n    this._stopped = true\n    this.prepared.name = this.prevEvent = null\n  }\n\n  getPointerIndex (pointer: any) {\n    const pointerId = pointerUtils.getPointerId(pointer)\n\n    // mouse and pen interactions may have only one pointer\n    return this.pointerType === 'mouse' || this.pointerType === 'pen'\n      ? this.pointers.length - 1\n      : arr.findIndex(this.pointers, (curPointer) => curPointer.id === pointerId)\n  }\n\n  getPointerInfo (pointer: any) {\n    return this.pointers[this.getPointerIndex(pointer)]\n  }\n\n  updatePointer (pointer: PointerType, event: PointerEventType, eventTarget: Node, down?: boolean) {\n    const id = pointerUtils.getPointerId(pointer)\n    let pointerIndex = this.getPointerIndex(pointer)\n    let pointerInfo = this.pointers[pointerIndex]\n\n    down = down === false ? false : down || /(down|start)$/i.test(event.type)\n\n    if (!pointerInfo) {\n      pointerInfo = new PointerInfo(id, pointer, event, null, null)\n\n      pointerIndex = this.pointers.length\n      this.pointers.push(pointerInfo)\n    } else {\n      pointerInfo.pointer = pointer\n    }\n\n    pointerUtils.setCoords(\n      this.coords.cur,\n      this.pointers.map((p) => p.pointer),\n      this._now(),\n    )\n    pointerUtils.setCoordDeltas(this.coords.delta, this.coords.prev, this.coords.cur)\n\n    if (down) {\n      this.pointerIsDown = true\n\n      pointerInfo.downTime = this.coords.cur.timeStamp\n      pointerInfo.downTarget = eventTarget\n      pointerUtils.pointerExtend(this.downPointer, pointer)\n\n      if (!this.interacting()) {\n        pointerUtils.copyCoords(this.coords.start, this.coords.cur)\n        pointerUtils.copyCoords(this.coords.prev, this.coords.cur)\n\n        this.downEvent = event\n        this.pointerWasMoved = false\n      }\n    }\n\n    this._updateLatestPointer(pointer, event, eventTarget)\n\n    this._scopeFire('interactions:update-pointer', {\n      pointer,\n      event,\n      eventTarget,\n      down,\n      pointerInfo,\n      pointerIndex,\n      interaction: this as unknown as Interaction<never>,\n    })\n\n    return pointerIndex\n  }\n\n  removePointer (pointer: PointerType, event: PointerEventType) {\n    const pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) return\n\n    const pointerInfo = this.pointers[pointerIndex]\n\n    this._scopeFire('interactions:remove-pointer', {\n      pointer,\n      event,\n      eventTarget: null,\n      pointerIndex,\n      pointerInfo,\n      interaction: this as unknown as Interaction<never>,\n    })\n\n    this.pointers.splice(pointerIndex, 1)\n    this.pointerIsDown = false\n  }\n\n  _updateLatestPointer (pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    this._latestPointer.pointer = pointer\n    this._latestPointer.event = event\n    this._latestPointer.eventTarget = eventTarget\n  }\n\n  destroy () {\n    this._latestPointer.pointer = null\n    this._latestPointer.event = null\n    this._latestPointer.eventTarget = null\n  }\n\n  _createPreparedEvent<P extends EventPhase> (\n    event: PointerEventType,\n    phase: P,\n    preEnd?: boolean,\n    type?: string,\n  ) {\n    return new InteractEvent<T, P>(this, event, this.prepared.name, phase, this.element, preEnd, type)\n  }\n\n  _fireEvent<P extends EventPhase> (iEvent: InteractEvent<T, P>) {\n    this.interactable?.fire(iEvent)\n\n    if (!this.prevEvent || iEvent.timeStamp >= this.prevEvent.timeStamp) {\n      this.prevEvent = iEvent\n    }\n  }\n\n  _doPhase<P extends EventPhase> (\n    signalArg: Omit<DoPhaseArg<T, P>, 'iEvent'> & { iEvent?: InteractEvent<T, P> },\n  ) {\n    const { event, phase, preEnd, type } = signalArg\n    const { rect } = this\n\n    if (rect && phase === 'move') {\n      // update the rect changes due to pointer move\n      rectUtils.addEdges(this.edges, rect, this.coords.delta[this.interactable.options.deltaSource])\n\n      rect.width = rect.right - rect.left\n      rect.height = rect.bottom - rect.top\n    }\n\n    const beforeResult = this._scopeFire(`interactions:before-action-${phase}` as any, signalArg)\n\n    if (beforeResult === false) {\n      return false\n    }\n\n    const iEvent = (signalArg.iEvent = this._createPreparedEvent(event, phase, preEnd, type))\n\n    this._scopeFire(`interactions:action-${phase}` as any, signalArg)\n\n    if (phase === 'start') {\n      this.prevEvent = iEvent\n    }\n\n    this._fireEvent(iEvent)\n\n    this._scopeFire(`interactions:after-action-${phase}` as any, signalArg)\n\n    return true\n  }\n\n  _now () {\n    return Date.now()\n  }\n}\n\nexport default Interaction\nexport { PointerInfo }\n"
	],
	"mappings": "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"
}