{
	"version": 3,
	"names": [
		"arr",
		"extend",
		"normalize",
		"fireUntilImmediateStopped",
		"event",
		"listeners",
		"listener",
		"immediatePropagationStopped",
		"Eventable",
		"options",
		"types",
		"propagationStopped",
		"global",
		"constructor",
		"fire",
		"type",
		"on",
		"merge",
		"off",
		"eventList",
		"length",
		"subListener",
		"index",
		"indexOf",
		"splice",
		"getRect",
		"_element"
	],
	"sources": [
		"Eventable.ts"
	],
	"sourcesContent": [
		"import type { Listener, ListenersArg, Rect } from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\nimport extend from '@interactjs/utils/extend'\nimport type { NormalizedListeners } from '@interactjs/utils/normalizeListeners'\nimport normalize from '@interactjs/utils/normalizeListeners'\n\nfunction fireUntilImmediateStopped (event: any, listeners: Listener[]) {\n  for (const listener of listeners) {\n    if (event.immediatePropagationStopped) {\n      break\n    }\n\n    listener(event)\n  }\n}\n\nexport class Eventable {\n  options: any\n  types: NormalizedListeners = {}\n  propagationStopped = false\n  immediatePropagationStopped = false\n  global: any\n\n  constructor (options?: { [index: string]: any }) {\n    this.options = extend({}, options || {})\n  }\n\n  fire<T extends { type: string, propagationStopped?: boolean }> (event: T) {\n    let listeners: Listener[]\n    const global = this.global\n\n    // Interactable#on() listeners\n    // tslint:disable no-conditional-assignment\n    if ((listeners = this.types[event.type])) {\n      fireUntilImmediateStopped(event, listeners)\n    }\n\n    // interact.on() listeners\n    if (!event.propagationStopped && global && (listeners = global[event.type])) {\n      fireUntilImmediateStopped(event, listeners)\n    }\n  }\n\n  on (type: string, listener: ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      this.types[type] = arr.merge(this.types[type] || [], listeners[type])\n    }\n  }\n\n  off (type: string, listener: ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      const eventList = this.types[type]\n\n      if (!eventList || !eventList.length) {\n        continue\n      }\n\n      for (const subListener of listeners[type]) {\n        const index = eventList.indexOf(subListener)\n\n        if (index !== -1) {\n          eventList.splice(index, 1)\n        }\n      }\n    }\n  }\n\n  getRect (_element: Element): Rect {\n    return null\n  }\n}\n"
	],
	"mappings": "AACA,OAAO,KAAKA,GAAZ,MAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,OAAOC,SAAP,MAAsB,gCAAtB;;AAEA,SAASC,yBAAT,CAAoCC,KAApC,EAAgDC,SAAhD,EAAuE;EACrE,KAAK,MAAMC,QAAX,IAAuBD,SAAvB,EAAkC;IAChC,IAAID,KAAK,CAACG,2BAAV,EAAuC;MACrC;IACD;;IAEDD,QAAQ,CAACF,KAAD,CAAR;EACD;AACF;;AAED,OAAO,MAAMI,SAAN,CAAgB;EACrBC,OAAO;EACPC,KAAK,GAAwB,EAAxB;EACLC,kBAAkB,GAAG,KAAH;EAClBJ,2BAA2B,GAAG,KAAH;EAC3BK,MAAM;;EAENC,WAAW,CAAEJ,OAAF,EAAsC;IAC/C,KAAKA,OAAL,GAAeR,MAAM,CAAC,EAAD,EAAKQ,OAAO,IAAI,EAAhB,CAArB;EACD;;EAEDK,IAAI,CAA4DV,KAA5D,EAAsE;IACxE,IAAIC,SAAJ;IACA,MAAMO,MAAM,GAAG,KAAKA,MAApB,CAFwE,CAIxE;IACA;;IACA,IAAKP,SAAS,GAAG,KAAKK,KAAL,CAAWN,KAAK,CAACW,IAAjB,CAAjB,EAA0C;MACxCZ,yBAAyB,CAACC,KAAD,EAAQC,SAAR,CAAzB;IACD,CARuE,CAUxE;;;IACA,IAAI,CAACD,KAAK,CAACO,kBAAP,IAA6BC,MAA7B,KAAwCP,SAAS,GAAGO,MAAM,CAACR,KAAK,CAACW,IAAP,CAA1D,CAAJ,EAA6E;MAC3EZ,yBAAyB,CAACC,KAAD,EAAQC,SAAR,CAAzB;IACD;EACF;;EAEDW,EAAE,CAAED,IAAF,EAAgBT,QAAhB,EAAwC;IACxC,MAAMD,SAAS,GAAGH,SAAS,CAACa,IAAD,EAAOT,QAAP,CAA3B;;IAEA,KAAKS,IAAL,IAAaV,SAAb,EAAwB;MACtB,KAAKK,KAAL,CAAWK,IAAX,IAAmBf,GAAG,CAACiB,KAAJ,CAAU,KAAKP,KAAL,CAAWK,IAAX,KAAoB,EAA9B,EAAkCV,SAAS,CAACU,IAAD,CAA3C,CAAnB;IACD;EACF;;EAEDG,GAAG,CAAEH,IAAF,EAAgBT,QAAhB,EAAwC;IACzC,MAAMD,SAAS,GAAGH,SAAS,CAACa,IAAD,EAAOT,QAAP,CAA3B;;IAEA,KAAKS,IAAL,IAAaV,SAAb,EAAwB;MACtB,MAAMc,SAAS,GAAG,KAAKT,KAAL,CAAWK,IAAX,CAAlB;;MAEA,IAAI,CAACI,SAAD,IAAc,CAACA,SAAS,CAACC,MAA7B,EAAqC;QACnC;MACD;;MAED,KAAK,MAAMC,WAAX,IAA0BhB,SAAS,CAACU,IAAD,CAAnC,EAA2C;QACzC,MAAMO,KAAK,GAAGH,SAAS,CAACI,OAAV,CAAkBF,WAAlB,CAAd;;QAEA,IAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;UAChBH,SAAS,CAACK,MAAV,CAAiBF,KAAjB,EAAwB,CAAxB;QACD;MACF;IACF;EACF;;EAEDG,OAAO,CAAEC,QAAF,EAA2B;IAChC,OAAO,IAAP;EACD;;AAzDoB"
}