{
	"version": 3,
	"names": [
		"extend",
		"getOriginXY",
		"hypot",
		"is",
		"resolveRectLike",
		"rectToXY",
		"makeModifier",
		"start",
		"arg",
		"interaction",
		"interactable",
		"element",
		"rect",
		"state",
		"startOffset",
		"options",
		"origin",
		"offsetWithOrigin",
		"getOrigin",
		"x",
		"y",
		"snapOffset",
		"offset",
		"coords",
		"page",
		"offsetRect",
		"relativePoints",
		"offsets",
		"length",
		"map",
		"relativePoint",
		"index",
		"left",
		"width",
		"top",
		"height",
		"set",
		"prepared",
		"name",
		"targets",
		"relativeX",
		"relativeY",
		"len",
		"snapTarget",
		"target",
		"func",
		"_proxy",
		"push",
		"number",
		"range",
		"source",
		"closest",
		"inRange",
		"distance",
		"delta",
		"dx",
		"dy",
		"Infinity",
		"optionsOrigin",
		"defaults",
		"endOnly",
		"enabled",
		"snap"
	],
	"sources": [
		"pointer.ts"
	],
	"sourcesContent": [
		"import type { Interaction, InteractionProxy } from '@interactjs/core/Interaction'\nimport type { ActionName, Point, RectResolvable, Element } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\nimport is from '@interactjs/utils/is'\nimport { resolveRectLike, rectToXY } from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierState } from '../types'\n\nexport interface Offset {\n  x: number\n  y: number\n  index: number\n  relativePoint?: Point | null\n}\n\nexport interface SnapPosition {\n  x?: number\n  y?: number\n  range?: number\n  offset?: Offset\n  [index: string]: any\n}\n\nexport type SnapFunction = (\n  x: number,\n  y: number,\n  interaction: InteractionProxy<ActionName>,\n  offset: Offset,\n  index: number,\n) => SnapPosition\nexport type SnapTarget = SnapPosition | SnapFunction\nexport interface SnapOptions {\n  targets: SnapTarget[] | null\n  // target range\n  range: number\n  // self points for snapping. [0,0] = top left, [1,1] = bottom right\n  relativePoints: Point[] | null\n  // startCoords = offset snapping from drag start page position\n  offset: Point | RectResolvable<[Interaction]> | 'startCoords' | null\n  offsetWithOrigin?: boolean\n  origin: RectResolvable<[Element]> | Point | null\n  endOnly?: boolean\n  enabled?: boolean\n}\n\nexport type SnapState = ModifierState<\nSnapOptions,\n{\n  offsets?: Offset[]\n  closest?: any\n  targetFields?: string[][]\n}\n>\n\nfunction start (arg: ModifierArg<SnapState>) {\n  const { interaction, interactable, element, rect, state, startOffset } = arg\n  const { options } = state\n  const origin = options.offsetWithOrigin ? getOrigin(arg) : { x: 0, y: 0 }\n\n  let snapOffset: Point\n\n  if (options.offset === 'startCoords') {\n    snapOffset = {\n      x: interaction.coords.start.page.x,\n      y: interaction.coords.start.page.y,\n    }\n  } else {\n    const offsetRect = resolveRectLike(options.offset as any, interactable, element, [interaction])\n\n    snapOffset = rectToXY(offsetRect) || { x: 0, y: 0 }\n    snapOffset.x += origin.x\n    snapOffset.y += origin.y\n  }\n\n  const { relativePoints } = options\n\n  state.offsets =\n    rect && relativePoints && relativePoints.length\n      ? relativePoints.map((relativePoint, index) => ({\n        index,\n        relativePoint,\n        x: startOffset.left - rect.width * relativePoint.x + snapOffset.x,\n        y: startOffset.top - rect.height * relativePoint.y + snapOffset.y,\n      }))\n      : [\n        {\n          index: 0,\n          relativePoint: null,\n          x: snapOffset.x,\n          y: snapOffset.y,\n        },\n      ]\n}\n\nfunction set (arg: ModifierArg<SnapState>) {\n  const { interaction, coords, state } = arg\n  const { options, offsets } = state\n\n  const origin = getOriginXY(interaction.interactable, interaction.element, interaction.prepared.name)\n  const page = extend({}, coords)\n  const targets = []\n\n  if (!options.offsetWithOrigin) {\n    page.x -= origin.x\n    page.y -= origin.y\n  }\n\n  for (const offset of offsets) {\n    const relativeX = page.x - offset.x\n    const relativeY = page.y - offset.y\n\n    for (let index = 0, len = options.targets.length; index < len; index++) {\n      const snapTarget = options.targets[index]\n      let target: SnapPosition\n\n      if (is.func(snapTarget)) {\n        target = snapTarget(relativeX, relativeY, interaction._proxy, offset, index)\n      } else {\n        target = snapTarget\n      }\n\n      if (!target) {\n        continue\n      }\n\n      targets.push({\n        x: (is.number(target.x) ? target.x : relativeX) + offset.x,\n        y: (is.number(target.y) ? target.y : relativeY) + offset.y,\n\n        range: is.number(target.range) ? target.range : options.range,\n        source: snapTarget,\n        index,\n        offset,\n      })\n    }\n  }\n\n  const closest = {\n    target: null,\n    inRange: false,\n    distance: 0,\n    range: 0,\n    delta: { x: 0, y: 0 },\n  }\n\n  for (const target of targets) {\n    const range = target.range\n    const dx = target.x - page.x\n    const dy = target.y - page.y\n    const distance = hypot(dx, dy)\n    let inRange = distance <= range\n\n    // Infinite targets count as being out of range\n    // compared to non infinite ones that are in range\n    if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n      inRange = false\n    }\n\n    if (\n      !closest.target ||\n      (inRange\n        ? // is the closest target in range?\n        closest.inRange && range !== Infinity\n          ? // the pointer is relatively deeper in this target\n          distance / range < closest.distance / closest.range\n          : // this target has Infinite range and the closest doesn't\n          (range === Infinity && closest.range !== Infinity) ||\n            // OR this target is closer that the previous closest\n            distance < closest.distance\n        : // The other is not in range and the pointer is closer to this target\n        !closest.inRange && distance < closest.distance)\n    ) {\n      closest.target = target\n      closest.distance = distance\n      closest.range = range\n      closest.inRange = inRange\n      closest.delta.x = dx\n      closest.delta.y = dy\n    }\n  }\n\n  if (closest.inRange) {\n    coords.x = closest.target.x\n    coords.y = closest.target.y\n  }\n\n  state.closest = closest\n  return closest\n}\n\nfunction getOrigin (arg: Partial<ModifierArg<SnapState>>) {\n  const { element } = arg.interaction\n  const optionsOrigin = rectToXY(resolveRectLike(arg.state.options.origin as any, null, null, [element]))\n  const origin = optionsOrigin || getOriginXY(arg.interactable, element, arg.interaction.prepared.name)\n\n  return origin\n}\n\nconst defaults: SnapOptions = {\n  range: Infinity,\n  targets: null,\n  offset: null,\n  offsetWithOrigin: true,\n  origin: null,\n  relativePoints: null,\n  endOnly: false,\n  enabled: false,\n}\nconst snap = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(snap, 'snap')\nexport { snap }\n"
	],
	"mappings": "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"
}